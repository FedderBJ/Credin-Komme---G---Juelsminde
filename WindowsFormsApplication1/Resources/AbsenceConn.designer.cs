#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication1.Resources
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TEST-NAV")]
	public partial class AbsenceConnDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCredin_Cause_of_Absence(Credin_Cause_of_Absence instance);
    partial void UpdateCredin_Cause_of_Absence(Credin_Cause_of_Absence instance);
    partial void DeleteCredin_Cause_of_Absence(Credin_Cause_of_Absence instance);
    #endregion
		
		public AbsenceConnDataContext() : 
				base(global::WindowsFormsApplication1.Properties.Settings.Default.TEST_NAVConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AbsenceConnDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AbsenceConnDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AbsenceConnDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AbsenceConnDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Credin_Cause_of_Absence> Credin_Cause_of_Absences
		{
			get
			{
				return this.GetTable<Credin_Cause_of_Absence>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Credin$Cause of Absence]")]
	public partial class Credin_Cause_of_Absence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private string _Code;
		
		private string _Description;
		
		private string _Unit_of_Measure_Code;
		
		private string _DA_Absence_Code;
		
		private int _Absence_Type;
		
		private int _Unit_Type;
		
		private string _Calendar_Code;
		
		private byte _Withdraw_Absence;
		
		private byte _Absence_Continues;
		
		private byte _Time_Account_Statement;
		
		private string _Terminal_Text;
		
		private byte _Shop_Fl_;
		
		private string _NemRefusion_Code;
		
		private byte _Lessor_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUnit_of_Measure_CodeChanging(string value);
    partial void OnUnit_of_Measure_CodeChanged();
    partial void OnDA_Absence_CodeChanging(string value);
    partial void OnDA_Absence_CodeChanged();
    partial void OnAbsence_TypeChanging(int value);
    partial void OnAbsence_TypeChanged();
    partial void OnUnit_TypeChanging(int value);
    partial void OnUnit_TypeChanged();
    partial void OnCalendar_CodeChanging(string value);
    partial void OnCalendar_CodeChanged();
    partial void OnWithdraw_AbsenceChanging(byte value);
    partial void OnWithdraw_AbsenceChanged();
    partial void OnAbsence_ContinuesChanging(byte value);
    partial void OnAbsence_ContinuesChanged();
    partial void OnTime_Account_StatementChanging(byte value);
    partial void OnTime_Account_StatementChanged();
    partial void OnTerminal_TextChanging(string value);
    partial void OnTerminal_TextChanged();
    partial void OnShop_Fl_Changing(byte value);
    partial void OnShop_Fl_Changed();
    partial void OnNemRefusion_CodeChanging(string value);
    partial void OnNemRefusion_CodeChanged();
    partial void OnLessor_PortalChanging(byte value);
    partial void OnLessor_PortalChanged();
    #endregion
		
		public Credin_Cause_of_Absence()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Unit of Measure Code]", Storage="_Unit_of_Measure_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Unit_of_Measure_Code
		{
			get
			{
				return this._Unit_of_Measure_Code;
			}
			set
			{
				if ((this._Unit_of_Measure_Code != value))
				{
					this.OnUnit_of_Measure_CodeChanging(value);
					this.SendPropertyChanging();
					this._Unit_of_Measure_Code = value;
					this.SendPropertyChanged("Unit_of_Measure_Code");
					this.OnUnit_of_Measure_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[DA Absence Code]", Storage="_DA_Absence_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DA_Absence_Code
		{
			get
			{
				return this._DA_Absence_Code;
			}
			set
			{
				if ((this._DA_Absence_Code != value))
				{
					this.OnDA_Absence_CodeChanging(value);
					this.SendPropertyChanging();
					this._DA_Absence_Code = value;
					this.SendPropertyChanged("DA_Absence_Code");
					this.OnDA_Absence_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Absence Type]", Storage="_Absence_Type", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Absence_Type
		{
			get
			{
				return this._Absence_Type;
			}
			set
			{
				if ((this._Absence_Type != value))
				{
					this.OnAbsence_TypeChanging(value);
					this.SendPropertyChanging();
					this._Absence_Type = value;
					this.SendPropertyChanged("Absence_Type");
					this.OnAbsence_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Unit Type]", Storage="_Unit_Type", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Unit_Type
		{
			get
			{
				return this._Unit_Type;
			}
			set
			{
				if ((this._Unit_Type != value))
				{
					this.OnUnit_TypeChanging(value);
					this.SendPropertyChanging();
					this._Unit_Type = value;
					this.SendPropertyChanged("Unit_Type");
					this.OnUnit_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Calendar Code]", Storage="_Calendar_Code", DbType="VarChar(2) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Calendar_Code
		{
			get
			{
				return this._Calendar_Code;
			}
			set
			{
				if ((this._Calendar_Code != value))
				{
					this.OnCalendar_CodeChanging(value);
					this.SendPropertyChanging();
					this._Calendar_Code = value;
					this.SendPropertyChanged("Calendar_Code");
					this.OnCalendar_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Withdraw Absence]", Storage="_Withdraw_Absence", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Withdraw_Absence
		{
			get
			{
				return this._Withdraw_Absence;
			}
			set
			{
				if ((this._Withdraw_Absence != value))
				{
					this.OnWithdraw_AbsenceChanging(value);
					this.SendPropertyChanging();
					this._Withdraw_Absence = value;
					this.SendPropertyChanged("Withdraw_Absence");
					this.OnWithdraw_AbsenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Absence Continues]", Storage="_Absence_Continues", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Absence_Continues
		{
			get
			{
				return this._Absence_Continues;
			}
			set
			{
				if ((this._Absence_Continues != value))
				{
					this.OnAbsence_ContinuesChanging(value);
					this.SendPropertyChanging();
					this._Absence_Continues = value;
					this.SendPropertyChanged("Absence_Continues");
					this.OnAbsence_ContinuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Time Account Statement]", Storage="_Time_Account_Statement", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Time_Account_Statement
		{
			get
			{
				return this._Time_Account_Statement;
			}
			set
			{
				if ((this._Time_Account_Statement != value))
				{
					this.OnTime_Account_StatementChanging(value);
					this.SendPropertyChanging();
					this._Time_Account_Statement = value;
					this.SendPropertyChanged("Time_Account_Statement");
					this.OnTime_Account_StatementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Terminal Text]", Storage="_Terminal_Text", DbType="VarChar(16) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Terminal_Text
		{
			get
			{
				return this._Terminal_Text;
			}
			set
			{
				if ((this._Terminal_Text != value))
				{
					this.OnTerminal_TextChanging(value);
					this.SendPropertyChanging();
					this._Terminal_Text = value;
					this.SendPropertyChanged("Terminal_Text");
					this.OnTerminal_TextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Shop Fl_]", Storage="_Shop_Fl_", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Shop_Fl_
		{
			get
			{
				return this._Shop_Fl_;
			}
			set
			{
				if ((this._Shop_Fl_ != value))
				{
					this.OnShop_Fl_Changing(value);
					this.SendPropertyChanging();
					this._Shop_Fl_ = value;
					this.SendPropertyChanged("Shop_Fl_");
					this.OnShop_Fl_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[NemRefusion Code]", Storage="_NemRefusion_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NemRefusion_Code
		{
			get
			{
				return this._NemRefusion_Code;
			}
			set
			{
				if ((this._NemRefusion_Code != value))
				{
					this.OnNemRefusion_CodeChanging(value);
					this.SendPropertyChanging();
					this._NemRefusion_Code = value;
					this.SendPropertyChanged("NemRefusion_Code");
					this.OnNemRefusion_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Lessor Portal]", Storage="_Lessor_Portal", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Lessor_Portal
		{
			get
			{
				return this._Lessor_Portal;
			}
			set
			{
				if ((this._Lessor_Portal != value))
				{
					this.OnLessor_PortalChanging(value);
					this.SendPropertyChanging();
					this._Lessor_Portal = value;
					this.SendPropertyChanged("Lessor_Portal");
					this.OnLessor_PortalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
